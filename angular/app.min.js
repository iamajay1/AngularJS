// first we have to declare the module. note that [] is where we will declare the dependecies later. Right now we are leaving it blank
var myApp = angular.module('LeagueApp', ['ngRoute']);

myApp.controller('LeagueController',['$http','$q',function($http,$q) {

  var main = this;

  this.leagueHeading = 'English Premier League';
  this.leagueSlogan = "Defeat isn't bitter if you don't swallow it";

  this.allMatches= [];
  this.loadAllLeague = function(){
  main.baseUrl =$http.get('https://raw.githubusercontent.com/openfootball/football.json/master/2015-16/en.1.json');
  main.baseUrl_1=$http.get('https://raw.githubusercontent.com/openfootball/football.json/master/2016-17/en.1.json');

  $q.all([
          main.baseUrl, main.baseUrl_1
         ]).then(function successCallback(response) {
        //    console.log(response);
            this.league = response[0].data.rounds;
            this.league_1 = response[1].data.rounds;
            main.allMatches=response[0].data.rounds.concat(response[1].data.rounds);
            console.log(main.allMatches);
          }, function errorCallback(response) {
            // called asynchronously if an error occurs
            // or server returns response with an error status.
            alert("some error occurred. Check the console.");
            console.log(response);
          });
        }
  this.loadAllLeague();
  }]); // end controller

myApp.controller('singleMatchController',['$http','$q','$routeParams',function($http,$q,$routeParams) {
    var main = this;
    this.allMatches=[];
    this.team1 = "";
    this.team2 = "";
    this.Code1 = "";
    this.Code2 = "";
    this.Key1 = "";
    this.Key2 = "";
    this.Score1 = "";
    this.Score2 = "";
    this.leagueName = "";
    this.Date = "";
    this.final="";
    this.date = $routeParams.date;
    //console.log(main.date);
    this.team1code = $routeParams.team1code;
    this.team2code = $routeParams.team2code;
        this.loadAllLeague = function(){
          main.baseUrl =$http.get('https://raw.githubusercontent.com/openfootball/football.json/master/2015-16/en.1.json');
          main.baseUrl_1=$http.get('https://raw.githubusercontent.com/openfootball/football.json/master/2016-17/en.1.json');

            $q.all([
              main.baseUrl, main.baseUrl_1
            ]).then(function successCallback(response) {
            //    console.log(response);

                this.league = response[0].data.rounds;
                this.league_1 = response[1].data.rounds;
                main.allMatches=response[0].data.rounds.concat(response[1].data.rounds);

                function singleMatch() {
                    for (var i = 0; i < main.allMatches.length; i++) {
                        //console.log(main.allMatches[i]);
                        var myData = main.allMatches[i];
                        for (var j = 0; j < myData.matches.length; j++) {
                          //console.log(myData.matches[j]);
                            main.leagueName = main.allMatches[i].name;

                            var newDate = myData.matches[j].date;
                            newDate = newDate.replace(/[^\/\d]/g, '');
                                   if (newDate = main.date && myData.matches[j].team1.code == main.team1code && myData.matches[j].team2.code == main.team2code) {

                                main.Date = myData.matches[j].date;
                                main.team1 = myData.matches[j].team1.name;
                                main.team2 = myData.matches[j].team2.name;
                                main.Code1 = myData.matches[j].team1.code;
                                main.Code2 = myData.matches[j].team2.code;
                                main.Key1 = myData.matches[j].team1.key;
                                main.Key2 = myData.matches[j].team2.key;
                                main.Score1 = myData.matches[j].score1;
                                main.Score2 = myData.matches[j].score2;

                                if(main.Score1>main.Score2){
                                  main.final=(main.team1+" defeats "+main.team2+" by "+main.Score1+" - "+main.Score2);
                                }else if(main.Score2>main.Score1){
                                  main.final=(main.team2+" defeats "+main.team1+" by "+main.Score2+" - "+main.Score1);
                                }else{
                                  main.final=("The match between "+main.team1+" vs "+main.team2+" is draw "+" by "+main.Score1+"-"+main.Score2);
                                }


                            }
                      }
                  }
              };
                  singleMatch();

           }, function errorCallback(response) {
                // called asynchronously if an error occurs
                // or server returns response with an error status.
                alert("some error occurred. Check the console.");
                console.log(response);

              });

          }

      this.loadAllLeague();

  }]); // end controller

  myApp.controller('teamWiseController', ['$http', '$q', '$routeParams', function($http, $q, $routeParams) {
      var main = this;
      this.allMatches = [];
      this.totalMatches_1 = [];
      this.Wins1 = [];
      this.Lost1 = [];
      this.tie1 = [];
      this.goals1 = 0;
      this.totalMatches_2 = [];
      this.Wins2 = [];
      this.Lost2 = [];
      this.tie2 = [];
      this.goals2 = 0;
      this.totalMatches = [];
      this.Wins = [];
      this.Lost = [];
      this.tie = [];
      this.goals = 0;
      this.team1 = "";
      this.team2 = "";
      this.winper="";
      this.lostper="";
      this.winper_1="";
      this.winper_2="";
      this.lostper_1="";
      this.lostper_2="";

      this.teamcode = $routeParams.teamcode;
      this.teamkey = $routeParams.teamkey;

      this.loadAllLeague = function(){
      main.baseUrl =$http.get('https://raw.githubusercontent.com/openfootball/football.json/master/2015-16/en.1.json');
      main.baseUrl_1=$http.get('https://raw.githubusercontent.com/openfootball/football.json/master/2016-17/en.1.json');

      $q.all([
            main.baseUrl, main.baseUrl_1
            ]).then(function successCallback(response) {
              var main_1=this;
              this.league=[];
              this.league_1=[];
              this.myData = [];
              this.myData_1 = [];

              this.league = response[0].data.rounds;
              this.league_1 = response[1].data.rounds;
              main.allMatches=response[0].data.rounds.concat(response[1].data.rounds);
              function singleTeam() {
                  for (var i = 0; i < main_1.league.length; i++) {
                      for (var j = 0; j < main_1.league[i].matches.length; j++) {
                          main_1.myData.push(main_1.league[i].matches[j]);

                      }
                  }

                  for (var i = 0; i < main_1.myData.length; i++) {
                      if ((main_1.myData[i].team1.code === main.teamcode || main_1.myData[i].team2.code === main.teamcode) && (main_1.myData[i].team1.key === main.teamkey || main_1.myData[i].team2.key === main.teamkey)) {
                      //   console.log(main_1.myData[i].date);
                          main.totalMatches_1.push(main_1.myData[i].team1.name);
                              if (main_1.myData[i].team1.code === main.teamcode && main_1.myData[i].team1.key === main.teamkey) {
                              main.team1 = main_1.myData[i].team1.name;
                              main.goals1 = main.goals1 + main_1.myData[i].score1;

                              if (main_1.myData[i].score1 > main_1.myData[i].score2) {

                                  main.Wins1.push(main_1.myData[i].team2.code);

                              } else if (main_1.myData[i].score1 < main_1.myData[i].score2) {

                                  main.Lost1.push(main_1.myData[i].team1.code);

                              } else if (main_1.myData[i].score1 == main_1.myData[i].score2) {
                                  main.tie1.push(main_1.myData[i].team1.code);
                              } else {
                                  console.log(nothing);
                              }
                          }
                          // team 2
                          if (main_1.myData[i].team2.code === main.teamcode && main_1.myData[i].team2.key === main.teamkey) {
                              main.goals1 = main.goals1 + main_1.myData[i].score2;

                              if (main_1.myData[i].score1 < main_1.myData[i].score2) {
                                  main.Wins1.push(main_1.myData[i].team2.code);
                              } else if (main_1.myData[i].score1 > main_1.myData[i].score2) {
                                  main.Lost1.push(main_1.myData[i].team1.code);
                              } else if (main_1.myData[i].score1 == main_1.myData[i].score2) {
                                  main.tie1.push(main_1.myData[i].team1.code);
                              } else {
                                  console.log(nothing);
                              }
                          }
                          //if team 2 end
                     }
                }

            };
              singleTeam();
                  function secondTeam() {
                  for (var i = 0; i < main_1.league_1.length; i++) {
                      for (var j = 0; j < main_1.league_1[i].matches.length; j++) {
                          main_1.myData_1.push(main_1.league_1[i].matches[j]);
                      }
                  }

                  for (var i = 0; i < main_1.myData_1.length; i++) {
                      if ((main_1.myData_1[i].team1.code === main.teamcode || main_1.myData_1[i].team2.code === main.teamcode) && (main_1.myData_1[i].team1.key === main.teamkey || main_1.myData_1[i].team2.key === main.teamkey)) {
                            main.totalMatches_2.push(main_1.myData_1[i].team1.name);

                          if (main_1.myData_1[i].team1.code === main.teamcode && main_1.myData_1[i].team1.key === main.teamkey) {
                              main.team2 = main_1.myData_1[i].team1.name;
                              main.goals2 = main.goals2 + main_1.myData[i].score1;
                              if (main_1.myData_1[i].score1 > main_1.myData_1[i].score2) {
                                  main.Wins2.push(main_1.myData_1[i].team2.code);
                              } else if (main_1.myData_1[i].score1 < main_1.myData_1[i].score2) {
                                  main.Lost2.push(main_1.myData_1[i].team1.code);
                              } else if (main_1.myData_1[i].score1 == main_1.myData_1[i].score2) {
                                  main.tie2.push(main_1.myData_1[i].team1.code);
                              } else {
                                  console.log(nothing);
                              }
                          }
                          if (main_1.myData_1[i].team2.code === main.teamcode && main_1.myData_1[i].team2.key === main.teamkey) {
                              main.totalgoals2 = main.totalgoals2 + main_1.myData[i].score2;
                              if (main_1.myData_1[i].score1 < main_1.myData_1[i].score2) {
                                  main.Wins2.push(main_1.myData_1[i].team2.code);
                              } else if (main_1.myData_1[i].score1 > main_1.myData_1[i].score2) {
                                  main.Lost2.push(main_1.myData_1[i].team1.code);
                              } else if (main_1.myData_1[i].score1 == main_1.myData_1[i].score2) {
                                  main.tie2.push(main_1.myData_1[i].team1.code);
                              } else {
                                  console.log(nothing);
                              }
                          }
                      }
                  }
              };
              secondTeam();

              main.totalMatches = main.totalMatches_1.length + main.totalMatches_2.length;
              main.Wins = main.Wins1.length + main.Wins2.length;
              main.Lost = main.Lost1.length + main.Lost2.length;
              main.tie = main.tie1.length + main.tie2.length;
              main.goals = main.goals1 + main.goals2;
              main.winper=((main.Wins/main.totalMatches)*100);
              main.lostper=((main.Lost/main.totalMatches)*100);
              main.winper_1=((main.Wins1.length/main.totalMatches_1.length)*100);
              main.winper_2=((main.Wins2.length/main.totalMatches_2.length)*100);
              main.lostper_1=((main.Lost1.length/main.totalMatches_1.length)*100);
              main.lostper_2=((main.Lost2.length/main.totalMatches_1.length)*100);
          }, function errorCallback(response) {
              alert("Error occurred. Check the console.");
          });
      }
      this.loadAllLeague();
}]);
